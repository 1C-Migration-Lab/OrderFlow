Ниже идёт развернутое описание **9-го уровня абстракции** — **«Business Processes / Бизнес-процессы»** — применительно к нашей **мини-конфигурации «Мини Заказы»**. Это уровень, на котором мы описываем **сценарии использования** (workflow), **ролей**, **шаги** процесса и **точки принятия решений** с точки зрения бизнеса. Технические детали (как именно всё устроено внутри 1С) здесь намеренно упрощаются.

---

## 1. «Создание заказа» (Основной процесс)

**Цель**: зафиксировать поступление нового заказа от клиента.

1. **Инициатор**: Менеджер по продажам.  
2. **Триггер**: Появляется потребность зарегистрировать заказ.  
3. **Шаги**:  
   1. Менеджер открывает форму «ЗаказПокупателя».  
   2. Если нужный клиент (контрагент) отсутствует в базе, менеджер создаёт нового контрагента (см. отдельный подпроцесс).  
   3. Менеджер заполняет поля заказа: выбирает **Контрагента**, указывает **Дата**, **Номер** (может быть автоматически) и переходит к табличной части.  
   4. В табличную часть добавляются строчки с выбранной **Номенклатурой**, **Количество**, **Цена**.  
   5. Система автоматически рассчитывает **Сумму строки** (количество * цена) и суммирует итоги в поле **СуммаДокумента**.  
   6. Менеджер проверяет корректность данных (цифры, наименование, контрагента).  
   7. Менеджер нажимает «Записать» или «ОК» (заказ теперь сохранён, но может быть ещё не проведён).  
4. **Результат**:  
   - Новый «ЗаказПокупателя» создан в системе.  
   - Заказ виден в списке документов, готов к дальнейшим действиям (например, проведение).  
5. **Возможные ответы/исключения**:  
   - Если контрагент указал неверную информацию (ошибка ввода) — менеджер корректирует данные и перезаписывает заказ.  
   - Если заказ отменяется (по желанию клиента) — заказ можно либо не проводить, либо удалить.

---

## 2. «Проведение заказа» (Процесс фиксации)

**Цель**: закрепить (зафиксировать) заказ в учётной системе и отразить в регистре.

1. **Инициатор**: Менеджер (после создания/редактирования заказа).  
2. **Шаги**:  
   1. Менеджер открывает документ «ЗаказПокупателя» (уже созданный).  
   2. Нажимает «Провести» или «Провести и закрыть».  
   3. Система вызывает **ПриПроведении** (в модуле объекта документа), формирует движение в **РегистрНакопления «ЗаказыПоКонтрагентам»** на сумму заказа.  
   4. Документ получает статус «Проведён» (в 1С — флажок «Проведён»).  
3. **Результат**:  
   - Заказ учтён в регистре, сумма заказа отражена в учётных данных, контрагент теперь «задолжал» (условно) соответствующую сумму.  
4. **Возможные ответы/исключения**:  
   - Если при проведении выявлены ошибки (например, отсутствуют реквизиты), система может выдать сообщение, и «Проведение» будет отменено.  
   - Менеджер может отложить проведение.

---

## 3. «Создание / ведение справочников» (Контрагенты, Номенклатура)

**Цель**: поддерживать актуальный список клиентов (контрагентов) и товаров (номенклатуры).

1. **Инициатор**: Администратор или Менеджер (в зависимости от политики прав).  
2. **Шаги**:  
   - **Создание контрагента**:  
     1. Открыть справочник «Контрагенты».  
     2. Нажать «Создать» (или «Новый»).  
     3. Заполнить поля: *Наименование*, *ИНН* (при необходимости).  
     4. Сохранить.  
   - **Создание номенклатуры**:  
     1. Открыть справочник «Номенклатура».  
     2. Нажать «Создать».  
     3. Заполнить поля: *Наименование*, *ЕдиницаИзмерения*.  
     4. Сохранить.  
3. **Результат**:  
   - Новый элемент в справочнике «Контрагенты» или «Номенклатура» создан.  
   - Доступен для выбора при формировании заказа.  
4. **Возможные варианты**:  
   - Редактирование уже существующего контрагента или товара (изменение наименования и т. п.).  
   - Удаление (если не используется в документах).

---

## 4. «Просмотр заказов и анализ сумм» (Ежедневная работа менеджера)

**Цель**: видеть актуальную картину по заказам, понимать общую сумму заказов, кому сколько отгружать (если бы это было расширено).

1. **Инициатор**: Менеджер / Руководитель.  
2. **Шаги**:  
   1. Менеджер открывает список «ЗаказыПокупателя».  
   2. Фильтрует, сортирует по дате/контрагенту или другим параметрам.  
   3. Смотрит поле **СуммаДокумента** для каждого заказа.  
   4. (Опционально) Использует быстрые отчёты или формы для анализа суммарных заказов за период.  
3. **Результат**:  
   - Менеджер видит актуальные заказы, их состояние (проведён / не проведён), сумму, контрагента.  
   - Может принимать решения (звонить клиенту, подготовить отгрузку и т. д.).

---

## 5. Возможные расширения бизнес-процессов

1. **«Отмена/Возврат» заказа**:  
   - Если заказ аннулируется, нужно дополнительно сторнировать запись в регистре (либо просто удалить документ, если регламенты позволяют).  
2. **«Отчёт по заказам»**:  
   - Менеджер или руководитель формирует отчёт за период, видит общую сумму заказов, разбивку по контрагентам.  
   - Это может быть отдельный процесс: открыть «Отчёт», задать период, получить сводную таблицу.  
3. **«Согласование заказа»** (если нужно усложнить):  
   - Перед проведением может быть этап проверки/согласования руководителем.  
   - Добавляется блок BPMN: «Отправить на согласование», «Утверждение/Отклонение» и т. д.

---

## Ключевые особенности бизнес-процессов в «Мини Заказы»

- **Минимум ролей**: достаточно роли **«Менеджер»** (который создаёт и проводит заказы) и, опционально, **«Администратор»** (который следит за справочниками).  
- **Простая логика**: нет сложных ветвлений, нет нескольких статусов (кроме «проведён» / «не проведён»).  
- **Упрощённый учёт**: регистр “ЗаказыПоКонтрагентам” ведёт только сумму заказов, без складского, бухгалтерского или финансового учёта.  
- **Прямой «ручной» поток**: менеджер сам решает, когда провести документ и зафиксировать сумму заказа в регистре.

---

### Итог

Таким образом, **Business Processes** для нашей мини-конфигурации можно свести к нескольким ключевым сценариям:  
- **Создание нового заказа** (с возможностью создания контрагента/товара на лету),  
- **Проведение заказа** (запись в регистр),  
- **Управление справочниками** (Контрагенты, Номенклатура),  
- **Просмотр и анализ заказов**.

Все остальные процессы являются вариациями/подпроцессами (редактирование, удаление, возврат, согласование), которые при необходимости можно дополнять и детализировать.