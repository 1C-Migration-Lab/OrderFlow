Ниже описан **6-й уровень** — **«Dependency Graph / Cross-Reference Model»** — для нашей **мини-конфигурации «Мини Заказы»**. На этом уровне мы смотрим на **связи и зависимости** между объектами (модулями, справочниками, документами, формами, регистрами) внутри конфигурации. Можно представить это в виде **графа**, где вершины — объекты 1С (и их модули), а рёбра — различные типы ссылок, вызовов, обращений.

---

# 1. Ключевые объекты и их типы

1. **Документ «ЗаказПокупателя»**  
   - **Модуль объекта** (процедуры «ПриЗаписи», «ПриПроведении»)  
   - **Модуль менеджера** (необязательно, но может быть)  
   - **Форма списка** (Модуль формы)  
   - **Форма объекта** (Модуль формы)

2. **Справочник «Контрагенты»**  
   - **Модуль объекта** (часто пустой в “мини” случае)  
   - **Модуль менеджера** (опционально)  
   - **Форма списка** (Модуль формы)  
   - **Форма элемента** (Модуль формы)

3. **Справочник «Номенклатура»**  
   - Аналогично «Контрагенты».

4. **РегистрНакопления «ЗаказыПоКонтрагентам»**  
   - **Модуль менеджера** (может быть, если нужна особая логика)

5. **(Опционально) Общие модули** (если бы мы туда выносили общую логику)

---

# 2. Основные зависимости (кто на что ссылается)

Ниже — основные **“направленные”** связи. Условно назовём их «вызывающие» (outbound) и «вызываемые» (inbound):

### 2.1. Документ «ЗаказПокупателя»

1. **Модуль объекта**  
   - **Ссылается** на:
     - Реквизиты документа (Шапка, ТЧ «Товары»).  
     - «Справочник.Номенклатура» (в табличной части: поле «Номенклатура»).  
     - «Справочник.Контрагенты» (в реквизите «Контрагент»).  
     - «РегистрНакопления.ЗаказыПоКонтрагентам» (через `Движения.ЗаказыПоКонтрагентам` при проведении).  
   - **Вызывается** из:
     - Формы объекта, формы списка (при записи, проведении и т.д.).  
     - Модуля менеджера (если там есть процедуры типа `СоздатьДокумент()`).

2. **Модуль менеджера «ЗаказПокупателя»** (если есть)  
   - **Ссылается** на:  
     - Модуль объекта (иногда в 1С из менеджера вызывают процедуры объекта, но реже).  
     - Может иметь обращения к «Справочникам», «Регистрам» и т.д., если там есть какие-то общие методы.  
   - **Вызывается** из:  
     - Форм списка, общие модули, формы других объектов (когда нужно создать/найти документ).

3. **Форма списка «ЗаказПокупателя»**  
   - **Ссылается** на:  
     - Модуль менеджера (для команды «Создать» документ, «Провести», «Удалить» и пр.).  
     - Форму объекта (при «Изменить» / «Создать»).  
   - **Вызывается** из:  
     - Главное меню (подсистема «Мини Заказы»).  

4. **Форма объекта «ЗаказПокупателя»**  
   - **Ссылается** на:  
     - Модуль объекта (т.к. может вызывать методы документа при сохранении / проведении).  
     - Справочники (контекстный ввод «Контрагент», «Номенклатура»).  
     - Поля документа (СуммаДокумента, ТЧ «Товары», реквизиты шапки).  
   - **Вызывается** из:  
     - Форма списка (при создании/открытии документа).

### 2.2. Справочники «Контрагенты», «Номенклатура»

- **Формы списка** (и элементы) ссылаются в первую очередь на свои **модули** (обработчики команд).  
- **Модуль объекта** и **модуль менеджера** могут быть пустыми в «мини»-конфигурации.  

**Где они вызываются?**  
- Из документа «ЗаказПокупателя» (в реквизитах и табличной части).  
- Из форм выбора (пользователь выбирает контрагента или товар).

### 2.3. РегистрНакопления «ЗаказыПоКонтрагентам»

- **Основной вызов** происходит из процедуры `ПриПроведении` модуля объекта «ЗаказПокупателя».  
- Модуль менеджера регистра (если есть) может вызываться при анализе данных или очистке.  

---

# 3. Пример визуализации графа (упрощённый)

Условно назовём объекты (вершины) так:

- **D_Zakaz_Obj** — Модуль объекта «ЗаказПокупателя»  
- **D_Zakaz_Man** — Модуль менеджера «ЗаказПокупателя»  
- **F_Zakaz_List** — Форма списка «ЗаказПокупателя»  
- **F_Zakaz_Item** — Форма объекта «ЗаказПокупателя»  
- **S_Cntr_Obj** — Модуль объекта «Справочник.Контрагенты»  
- **S_Cntr_FormList**, **S_Cntr_FormItem** — формы списка/элемента «Контрагенты»  
- **S_Nom_Obj** — Модуль объекта «Справочник.Номенклатура»  
- **Reg_Zakazy** — Регистр «ЗаказыПоКонтрагентам»

### 3.1. Рёбра (кто на что ссылается)

1. **F_Zakaz_List** → **D_Zakaz_Man** (при создании или удалении документа)  
2. **F_Zakaz_List** → **F_Zakaz_Item** (при редактировании/открытии документа)  
3. **F_Zakaz_Item** → **D_Zakaz_Obj** (при записи, проведении)  
4. **D_Zakaz_Obj** → **Reg_Zakazy** (формирование движений)  
5. **D_Zakaz_Obj** → **S_Cntr_Obj** (косвенно, если считывает реквизиты контрагента; либо только ссылка на справочник в реквизите)  
6. **D_Zakaz_Obj** → **S_Nom_Obj** (косвенно, при работе с табличной частью «Товары»)  

(На практике в 1С часть ссылок может быть чисто «метаданные» — например, реквизит «Контрагент» внутри «ЗаказПокупателя».)

---

# 4. Виды зависимостей (типизация)

В 1С можно выделить различные **типы** зависимостей:

1. **Ссылки на объекты метаданных** (Реквизит «Контрагент» → справочник «Контрагенты»).  
2. **Вызовы процедур** (из модуля формы → методы модуля менеджера, из модуля объекта → общий модуль).  
3. **Движения по регистрам** (из документа → регистр).  
4. **Использование глобального контекста** (например, «Сообщить()», «ВызватьИсключение()» и т.д., если есть).  

В мини-конфигурации обычно видим:

- **Документ** → **Справочники** (через реквизиты и табличную часть).  
- **Документ** → **Регистр** (движения).  
- **Формы** → **Модули** (вызывают процедуры для CRUD).  
- **Модули** → **Формы** (если нужно открыть форму).

---

# 5. Короткая матрица зависимостей

| Объект (Исходный)               | Зависит от (Целевой)                                      | Тип зависимости                    |
|---------------------------------|-----------------------------------------------------------|------------------------------------|
| F_Zakaz_List (Форма списка)     | D_Zakaz_Man (Модуль менеджера)                            | Вызов процедур (Создать, Удалить)  |
| F_Zakaz_List (Форма списка)     | F_Zakaz_Item (Форма объекта)                              | Открытие формы                     |
| F_Zakaz_Item (Форма объекта)    | D_Zakaz_Obj (Модуль объекта)                              | Вызов процедур (Записать, Провести)|
| D_Zakaz_Obj (Модуль объекта)    | Reg_Zakazy (РегистрНакопления)                            | Запись движений (ПриПроведении)    |
| D_Zakaz_Obj (Модуль объекта)    | Справочник.Контрагенты                                   | Реквизит «Контрагент»              |
| D_Zakaz_Obj (Модуль объекта)    | Справочник.Номенклатура                                  | ТЧ «Товары»: поле «Номенклатура»   |

*(Можно расширять при необходимости.)*

---

## Итог

**Dependency Graph / Cross-Reference Model** для «Мини Заказы» показывает, **как**:

1. **Формы** зависят от **модулей** (или наоборот) — при создании, открытии, проведении.  
2. **Документ «ЗаказПокупателя»** ссылается на **Справочники** (через реквизиты) и **Регистр** (через движения).  
3. **Справочники** могут особо не «дергать» документ (обычно это односторонняя зависимость: документ использует справочники, а не наоборот).  

Визуально это **граф** или набор **рёбер** «кто кого вызывает», «где кто используется», что при дальнейшей разработке/миграции (например, на Go+JS) упрощает понимание: **какие модули** нужно переписать и **как** они связаны друг с другом.